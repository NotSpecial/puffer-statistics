#!/usr/bin/perl -w

use strict;

open SESSIONS, q{sessions-cleaned.txt} or die;

my %watch_time;

while (<SESSIONS>) {
  chomp;
  my ( $timestamp, $goodbad, $fulltrunc, $scheme,
       $ip, $os, $channelchange, $init_id,
       $extent, $usedpct, $startup_delay, $total_after_startup,
       $stall_after_startup ) = split /\s+/, $_;

  next if ($scheme =~ m{/cubic$});
  next if ($channelchange == -1);

  next unless ($timestamp >= 1547884800 and $timestamp < 1565193009) or ($timestamp > 1567206883);
#  next unless ($timestamp >= 1547884800 and $timestamp < 1548748800);

  $scheme =~ s{/}{_};

  $extent =~ s{^extent=}{}g;
  $init_id =~ s{^init=}{}g;
  my $adjusted_init_id = $init_id - $channelchange;

  $watch_time{$scheme}{qq{$ip $adjusted_init_id}} += $extent;
}

for my $scheme ( keys %watch_time ) {
  my @watch_times;
  for my $megasession_id ( keys %{ $watch_time{ $scheme } } ) {
    push @watch_times, $watch_time{ $scheme }{ $megasession_id };
  }

  my @sorted_samples = sort { $a <=> $b } @watch_times;

  open OUT, qq{>watchtimes/${scheme}.cdf} or die;

#  printf OUT qq{%f %f %.2f\n}, 0, 0, 0;

  for (my $i = 0; $i < (scalar @sorted_samples); $i++) {
    printf OUT qq{%f %f\n},
      $sorted_samples[$i],
      ($i+1) / (scalar @sorted_samples);
  }

  close OUT or die;
}
